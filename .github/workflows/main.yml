name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run flake8
        run: flake8 .
  types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run mypy
        run: mypy .
  test:
    runs-on: ubuntu-latest
    needs: [lint, types]


    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_DB: "test"
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432


    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run migrations
        run: alembic upgrade head
      - name: Run test
        run: python -m pytest -vv --junitxml=pytest.xml --cov=beaver_app --cov-branch --cov-fail-under=80 . | tee pytest-coverage.txt
      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      - name: Echo min coverage
        run: |
          echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
      - name: Check min coverage
        shell: python
        run: |
          import sys
          
          cov_fail_under = 80
          percent_in_string = '''${{ steps.coverageComment.outputs.coverage }}'''
          percent = int(percent_in_string.replace('%', ''))
          if percent < cov_fail_under:
            sys.exit(1)


    env:
      POSTGRES_DBNAME: test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
